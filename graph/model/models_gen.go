// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type Activity struct {
	ID        string    `json:"id"`
	Sender    *User     `json:"sender"`
	SenderID  string    `json:"sender_id"`
	Target    *User     `json:"target"`
	TargetID  string    `json:"target_id"`
	Type      string    `json:"type"`
	Message   string    `json:"message"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type Channel struct {
	ID          string    `json:"id"`
	Broadcaster *User     `json:"broadcaster"`
	Title       string    `json:"title"`
	Category    string    `json:"category"`
	Streamkey   string    `json:"streamkey"`
	PlaybackID  string    `json:"playback_id"`
	Tags        []string  `json:"tags"`
	IsBranded   bool      `json:"is_branded"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
}

type ChannelFlakes struct {
	ID        string    `json:"id"`
	ChannelID string    `json:"channel_id"`
	SenderID  string    `json:"sender_id"`
	Amount    int       `json:"amount"`
	CreatedAt time.Time `json:"created_at"`
}

type ChannelInput struct {
	BroadcasterID string   `json:"broadcaster_id"`
	Title         string   `json:"title"`
	Category      string   `json:"category"`
	Streamkey     string   `json:"streamkey"`
	PlaybackID    string   `json:"playback_id"`
	Viewers       string   `json:"viewers"`
	Tags          []string `json:"tags"`
	IsBranded     bool     `json:"is_branded"`
}

type ChannelViewer struct {
	ID        string    `json:"id"`
	ChannelID string    `json:"channel_id"`
	UserID    string    `json:"user_id"`
	CreatedAt time.Time `json:"created_at"`
}

type ChannelViewerInput struct {
	ChannelID string `json:"channel_id"`
	UserID    string `json:"user_id"`
}

type ChatIdentity struct {
	ID     string `json:"id"`
	UserID string `json:"user_id"`
	Color  string `json:"color"`
	Badge  string `json:"badge"`
}

type ChatIdentityInput struct {
	Color string `json:"color"`
	Badge string `json:"badge"`
}

type Flakes struct {
	ID        string    `json:"id"`
	UserID    string    `json:"user_id"`
	Amount    int       `json:"amount"`
	CreatedAt time.Time `json:"created_at"`
}

type FollowInput struct {
	UserID     string `json:"user_id"`
	FollowerID string `json:"follower_id"`
}

type Follower struct {
	ID         string    `json:"id"`
	UserID     string    `json:"user_id"`
	FollowerID string    `json:"follower_id"`
	CreatedAt  time.Time `json:"created_at"`
}

type FollowersEdge struct {
	Cursor string `json:"cursor"`
	Node   *User  `json:"node"`
}

type FollowersResult struct {
	Edges    []*FollowersEdge `json:"edges"`
	PageInfo *PageInfo        `json:"pageInfo"`
}

type Membership struct {
	ID        string    `json:"id"`
	ChannelID string    `json:"channel_id"`
	UserID    string    `json:"user_id"`
	Gifter    string    `json:"gifter"`
	IsGift    bool      `json:"is_gift"`
	Tier      string    `json:"tier"`
	IsActive  bool      `json:"is_active"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type MembershipDetails struct {
	ID          string    `json:"id"`
	ChannelID   string    `json:"channel_id"`
	Tier        int       `json:"tier"`
	Name        string    `json:"name"`
	Description string    `json:"description"`
	Badges      []string  `json:"badges"`
	Cost        int       `json:"cost"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
}

type MembershipDetailsInput struct {
	ChannelID   string `json:"channel_id"`
	Tier        int    `json:"tier"`
	Name        string `json:"name"`
	Description string `json:"description"`
	Cost        int    `json:"cost"`
}

type Message struct {
	ID                   string    `json:"id"`
	ChannelID            string    `json:"channel_id"`
	SenderID             string    `json:"sender_id"`
	Sender               *User     `json:"sender"`
	IsSent               bool      `json:"is_sent"`
	Message              string    `json:"message"`
	MessageType          string    `json:"message_type"`
	Amount               int       `json:"amount"`
	DropCode             string    `json:"drop_code"`
	DropMessage          string    `json:"drop_message"`
	ReplyParentMessageID string    `json:"reply_parent_message_id"`
	CreatedAt            time.Time `json:"created_at"`
	UpdatedAt            time.Time `json:"updated_at"`
}

type Mutation struct {
}

type NewMembership struct {
	ChannelID string `json:"channel_id"`
	UserID    string `json:"user_id"`
	GifterID  string `json:"gifter_id"`
	IsGift    bool   `json:"is_gift"`
	IsActive  bool   `json:"is_active"`
	Tier      string `json:"tier"`
}

type NewMessage struct {
	ChannelID            string `json:"channel_id"`
	SenderID             string `json:"sender_id"`
	Message              string `json:"message"`
	MessageType          string `json:"message_type"`
	Amount               int    `json:"amount"`
	IsSent               bool   `json:"is_sent"`
	ReplyParentMessageID string `json:"reply_parent_message_id"`
}

type NewUser struct {
	Name     string `json:"name"`
	Email    string `json:"email"`
	Username string `json:"username"`
}

type NewVideo struct {
	ChannelID string `json:"channel_id"`
	Title     string `json:"title"`
	JobID     string `json:"job_id"`
}

type NewVideoView struct {
	ChannelID string `json:"channel_id"`
	UserID    string `json:"user_id"`
	VideoID   string `json:"video_id"`
}

type Notification struct {
	ID        string   `json:"id"`
	Owner     string   `json:"owner"`
	Entity    string   `json:"entity"`
	Message   string   `json:"message"`
	SeenBy    []string `json:"seen_by"`
	CreatedAt string   `json:"created_at"`
}

type PageInfo struct {
	EndCursor   string `json:"endCursor"`
	HasNextPage bool   `json:"hasNextPage"`
}

type Payment struct {
	ID        string    `json:"id"`
	UserID    string    `json:"user_id"`
	OrderID   string    `json:"order_id"`
	Status    string    `json:"status"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type PaymentInput struct {
	UserID  string `json:"user_id"`
	OrderID string `json:"order_id"`
	Status  string `json:"status"`
}

type Query struct {
}

type Subscription struct {
}

type Token struct {
	ID        string     `json:"id"`
	UserID    string     `json:"user_id"`
	Token     string     `json:"token"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

type UpdateUser struct {
	Username  string `json:"username"`
	Name      string `json:"name"`
	Biography string `json:"biography"`
}

type UpdateVideo struct {
	Title     string `json:"title"`
	Caption   string `json:"caption"`
	Category  string `json:"category"`
	Poster    string `json:"poster"`
	Thumbnail string `json:"thumbnail"`
	Media     string `json:"media"`
	Tier      int    `json:"tier"`
	IsVisible bool   `json:"isVisible"`
}

type User struct {
	ID                  string        `json:"id"`
	Email               string        `json:"email"`
	Username            string        `json:"username"`
	Name                string        `json:"name"`
	Biography           string        `json:"biography"`
	StripeCustomerID    string        `json:"stripe_customer_id"`
	StripeConnectedLink bool          `json:"stripe_connected_link"`
	IsActive            bool          `json:"is_active"`
	IsVerified          bool          `json:"is_verified"`
	Photo               string        `json:"photo"`
	Cover               string        `json:"cover"`
	Description         string        `json:"description"`
	ChatIdentity        *ChatIdentity `json:"chat_identity"`
	Links               []string      `json:"links"`
	CreatedAt           time.Time     `json:"created_at"`
	UpdatedAt           time.Time     `json:"updated_at"`
}

type UserStripeInput struct {
	StripeCustomerID    string `json:"stripe_customer_id"`
	StripeConnectedLink bool   `json:"stripe_connected_link"`
}

type UsersInChat struct {
	ID        string `json:"id"`
	ChannelID string `json:"channel_id"`
	UserID    string `json:"user_id"`
	User      *User  `json:"user"`
}

type UsersInChatInput struct {
	ChannelID string `json:"channel_id"`
	UserID    string `json:"user_id"`
}

type Video struct {
	ID        string    `json:"id"`
	ChannelID string    `json:"channel_id"`
	Title     string    `json:"title"`
	Caption   string    `json:"caption"`
	Category  string    `json:"category"`
	Poster    string    `json:"poster"`
	Thumbnail string    `json:"thumbnail"`
	Media     string    `json:"media"`
	JobID     string    `json:"job_id"`
	Tier      int       `json:"tier"`
	Views     int       `json:"views"`
	IsPremium bool      `json:"isPremium"`
	IsVisible bool      `json:"isVisible"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type VideoView struct {
	ID        string    `json:"id"`
	VideoID   string    `json:"video_id"`
	UserID    string    `json:"user_id"`
	CreatedAt time.Time `json:"created_at"`
}

type VideosEdge struct {
	Cursor string `json:"cursor"`
	Node   *Video `json:"node"`
}

type VideosResult struct {
	Edges    []*VideosEdge `json:"edges"`
	PageInfo *PageInfo     `json:"pageInfo"`
}
