// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type Activity struct {
	ID        string    `json:"id"`
	Target    *User     `json:"target"`
	Entity    string    `json:"entity"`
	Message   string    `json:"message"`
	CreatedAt time.Time `json:"created_at"`
}

type ChatIdentity struct {
	ID     string `json:"id"`
	UserID string `json:"user_id"`
	Color  string `json:"color"`
	Badge  string `json:"badge"`
}

type ChatIdentityInput struct {
	Color string `json:"color"`
	Badge string `json:"badge"`
}

type FollowInput struct {
	UserID     string `json:"user_id"`
	FollowerID string `json:"follower_id"`
}

type Follower struct {
	ID         string    `json:"id"`
	UserID     string    `json:"user_id"`
	FollowerID string    `json:"follower_id"`
	CreatedAt  time.Time `json:"created_at"`
}

type Like struct {
	ID        string    `json:"id"`
	UserID    string    `json:"user_id"`
	PostID    string    `json:"post_id"`
	CreatedAt time.Time `json:"created_at"`
}

type Message struct {
	ID                   string    `json:"id"`
	ChannelID            string    `json:"channel_id"`
	SenderID             string    `json:"sender_id"`
	Sender               *User     `json:"sender"`
	IsSent               bool      `json:"is_sent"`
	Message              string    `json:"message"`
	MessageType          string    `json:"message_type"`
	DropCode             string    `json:"drop_code"`
	DropMessage          string    `json:"drop_message"`
	ReplyParentMessageID string    `json:"reply_parent_message_id"`
	CreatedAt            time.Time `json:"created_at"`
	UpdatedAt            time.Time `json:"updated_at"`
}

type Mutation struct {
}

type NewMessage struct {
	ChannelID            string `json:"channel_id"`
	SenderID             string `json:"sender_id"`
	Message              string `json:"message"`
	MessageType          string `json:"message_type"`
	IsSent               bool   `json:"is_sent"`
	ReplyParentMessageID string `json:"reply_parent_message_id"`
}

type NewPost struct {
	UserID string `json:"user_id"`
	Title  string `json:"title"`
	Type   string `json:"type"`
	Media  string `json:"media"`
}

type NewSub struct {
	ChannelID string `json:"channel_id"`
	UserID    string `json:"user_id"`
	GifterID  string `json:"gifter_id"`
	IsGift    bool   `json:"is_gift"`
	Tier      string `json:"tier"`
}

type NewUser struct {
	Name     string `json:"name"`
	Email    string `json:"email"`
	Username string `json:"username"`
}

type NewWaitlist struct {
	Email string `json:"email"`
}

type Notification struct {
	ID        string   `json:"id"`
	Owner     string   `json:"owner"`
	Entity    string   `json:"entity"`
	Message   string   `json:"message"`
	SeenBy    []string `json:"seen_by"`
	CreatedAt string   `json:"created_at"`
}

type Post struct {
	ID        string    `json:"id"`
	ChannelID string    `json:"channel_id"`
	Title     string    `json:"title"`
	Caption   string    `json:"caption"`
	IsPremium bool      `json:"isPremium"`
	IsVisible bool      `json:"isVisible"`
	Thumbnail string    `json:"thumbnail"`
	Type      string    `json:"type"`
	Media     string    `json:"media"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type Query struct {
}

type Subs struct {
	ID        string    `json:"id"`
	Channel   *User     `json:"channel"`
	User      *User     `json:"user"`
	Gifter    *User     `json:"gifter"`
	IsGift    bool      `json:"is_gift"`
	Tier      string    `json:"tier"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type Subscription struct {
}

type Token struct {
	ID        string     `json:"id"`
	UserID    string     `json:"user_id"`
	Token     string     `json:"token"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

type UpdatePost struct {
	Title     string `json:"title"`
	Caption   string `json:"caption"`
	IsPremium bool   `json:"isPremium"`
	IsVisible bool   `json:"isVisible"`
	Thumbnail string `json:"thumbnail"`
	Type      string `json:"type"`
	Media     string `json:"media"`
}

type UpdateUser struct {
	Username  string `json:"username"`
	Name      string `json:"name"`
	Biography string `json:"biography"`
}

type User struct {
	ID               string        `json:"id"`
	Email            string        `json:"email"`
	Username         string        `json:"username"`
	Name             string        `json:"name"`
	Biography        string        `json:"biography"`
	StripeCustomerID string        `json:"stripe_customer_id"`
	IsActive         bool          `json:"is_active"`
	IsVerified       bool          `json:"is_verified"`
	Photo            string        `json:"photo"`
	Cover            string        `json:"cover"`
	Description      string        `json:"description"`
	ChatIdentity     *ChatIdentity `json:"chat_identity"`
	Links            []string      `json:"links"`
	LastLogin        time.Time     `json:"last_login"`
	CreatedAt        time.Time     `json:"created_at"`
	UpdatedAt        time.Time     `json:"updated_at"`
}

type UsersInChat struct {
	ID        string `json:"id"`
	ChannelID string `json:"channel_id"`
	UserID    string `json:"user_id"`
	User      *User  `json:"user"`
}

type UsersInChatInput struct {
	ChannelID string `json:"channel_id"`
	UserID    string `json:"user_id"`
}

type Video struct {
	ID          string    `json:"id"`
	Title       string    `json:"title"`
	Year        int       `json:"year"`
	Description string    `json:"description"`
	Genre       string    `json:"genre"`
	Trailer     string    `json:"trailer"`
	Poster      string    `json:"poster"`
	Thumbnail   string    `json:"thumbnail"`
	Likes       []*User   `json:"likes"`
	Dislikes    []*User   `json:"dislikes"`
	Views       int       `json:"views"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
}

type Waitlist struct {
	ID        string     `json:"id"`
	Email     string     `json:"email"`
	CanEnter  bool       `json:"canEnter"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
}
