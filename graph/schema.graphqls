directive @goField(
  forceResolver: Boolean
  name: String
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @auth on FIELD_DEFINITION

scalar Time
scalar UUID
scalar JSON
scalar Any

type User {
    id: UUID!
    email: String!
    username: String!
    name: String!
    photo: String
    stripe_customer_id: String!
    is_active: String!
    created_at: Time
    updated_at: Time
}

input NewUser {
    name: String!
    email: String!
    username: String!
}

input UpdateUser {
    name: String!
    username: String!
    email: String!
    photo: String
    stripe_customer_id: String!
    is_active: String!
    updated_at: Time
}

type Token {
    id: UUID!
    user_id: String!
    token: String!
    created_at: Time
}

type Waitlist {
    id: UUID!
    email: String!
    canEnter: Boolean!
    created_at: Time
}

input NewWaitlist {
    email: String!
}

type Post {
    id: UUID!
    user_id: String!
    title: String!
    caption: String!
    isPremium: Boolean!
    isVisible: Boolean!
    thumbnail: String!
    type: String!
    media: String!
    created_at: Time!
    updated_at: Time!
}

input NewPost {
    user_id: String!
    title: String!
    caption: String!
    isPremium: Boolean!
    isVisible: Boolean!
    thumbnail: String!
    type: String!
    media: String!
}

input UpdatePost {
    title: String!
    caption: String!
    isPremium: Boolean!
    isVisible: Boolean!
    thumbnail: String!
    type: String!
    media: String!
}

type Mutation {
    createUser(input: NewUser!): User!
    updateUser(id: String!, input: UpdateUser): User!
    deleteUser(id: String!): User!

    login(email: String!): String!
    verifyToken(id: String!, token: String!): String!
    verifyEmail(id: String!, email: String!): Boolean!

    createPost(input: NewPost!): Post!
    updatePost(id: String!, input: UpdatePost!): Post!
    deletePost(id: String!): Post!

    addToWaitlist(input: NewWaitlist!): Waitlist!
    updateWaitlistEntry(email: String!, canEnter: Boolean!): Waitlist!
}

type Query {
    users: [User!]! @auth
    user(id: ID!): User! @auth

    getUserByUsername(username: String!): User! @auth
    getUserByEmail(email: String!): User! @auth
    getUserById(id: String!): User! @auth
    searchUsers(query: String!): [User!]! @auth

    getPostByUserPaginated(user_id: String!, page: Int!, limit: Int!): [Post!]!
    getPostById(id: String!): Post!

    getWaitlist(email: String!): Boolean! @auth
}
