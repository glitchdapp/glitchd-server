scalar Time

type Account {
  id: ID!
  email: String!
  username: String!
  hash_password: String!
  User: User!
  created_at: Time
  last_login: Time
}

type User {
  id: ID!
  name: String!
  photo: String!
  phone: String
  is_verified: Boolean!
  is_deactivated: Boolean!
  is_email_verified: Boolean!
  created_at: Time
  updated_at: Time
}

type Tokens {
  id: ID!
  account: Account!
  token: String!
}

input NewUser {
  name: String!
  photo: String
  username: String!
  phone: String
  is_verified: Boolean!
  is_deactivated: Boolean!
  created_at: Time
  updated_at: Time
}

input NewAccount {
  email: String!
  username: String!
  hash_password: String!
  user: NewUser!
  created_at: Time
  last_login: Time
}

type Mutation {
  createUser(input: NewAccount) : Account
  updateAccount(id: ID!, input: NewAccount): Account!
  deleteAccount(id: ID!): Account!
}

type Query {
  accounts: [Account!]!
  account(id: ID!): Account!
}